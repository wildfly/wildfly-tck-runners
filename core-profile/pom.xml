<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright \(c\) "2022" Red Hat and others
  ~
  ~ This program and the accompanying materials are made available under the Apache Software License 2.0 which is available at:
  ~  https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~  SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>40</version>
    </parent>

    <groupId>org.wildfly.tck</groupId>
    <artifactId>core-tck-runner-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>WildFly Jakarta Core Profile TCK Runner Parent</name>

    <!-- Metadata -->
    <url>https://github.com/eclipse-ee4j/cdi-tck/</url>

    <developers>
        <developer>
            <name>Scott Stark</name>
            <email>sstark@redhat.com</email>
            <organization>Red Hat Inc.</organization>
        </developer>

        <developer>
            <name>Scott Marlow</name>
            <email>smarlow@redhat.com</email>
            <organization>Red Hat Inc.</organization>
        </developer>

        <developer>
            <name>James Perkins</name>
            <email>jperkins@redhat.com</email>
            <organization>Red Hat Inc.</organization>
        </developer>

    </developers>

    <organization>
        <name>Jakarta Core Profile TCK Runner (10.0) for WildFly</name>
        <url>https://github.com/wildfly/wildfly-tck-runners</url>
    </organization>

    <issueManagement>
        <system>GitHub</system>
        <url>/https://github.com/wildfly/wildfly-tck-runner/issues</url>
    </issueManagement>

    <scm>
        <!-- https://github.com/wildfly/wildfly-tck-runners -->
        <connection>scm:git:git@github.com:wildfly/wildfly-tck-runners.git</connection>
        <developerConnection>scm:git:git@github.com:wildfly/wildfly-tck-runner.git</developerConnection>
        <url>github.com/wildfly/wildfly-tck-runners</url>
        <tag>HEAD</tag>
    </scm>

    <inceptionYear>2022</inceptionYear>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <properties>
        <maven.repo.local>${settings.localRepository}</maven.repo.local>

        <!-- Java workarounds -->
        <addjdkexports>--add-exports=java.desktop/sun.awt=ALL-UNNAMED</addjdkexports>
        <addjdkopens>--add-opens=java.base/java.io=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.base/java.security=ALL-UNNAMED --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.management/javax.management=ALL-UNNAMED --add-opens=java.naming/javax.naming=ALL-UNNAMED</addjdkopens>

        <!-- Jakarta EE APIs Core -->
        <inject.api.version>2.0.1</inject.api.version>
        <cdi.api.version>4.0.1</cdi.api.version>
        <el.api.version>5.0.0</el.api.version>
        <jsonp.tck.version>2.1.1</jsonp.tck.version>
        <jsonb.tck.version>3.0.0</jsonb.tck.version>
        <core.profile.tck.version>10.0.3</core.profile.tck.version>
        <cdi.tck.version>4.0.13</cdi.tck.version>
        <cdi.tck.dist.version>${cdi.tck.version}</cdi.tck.dist.version>
        <rest.tck.version>3.1.4</rest.tck.version>

        <!-- Test tools/dependencies -->
        <version.org.jboss.arquillian>1.7.2.Final</version.org.jboss.arquillian>
        <shrinkwrap.ee.descriptors.impl.version>2.0.0</shrinkwrap.ee.descriptors.impl.version>
        <apache.httpclient.version>3.1</apache.httpclient.version>
        <glassfish.jakarta.el.version>4.0.2</glassfish.jakarta.el.version>
        <jupiter.version>5.10.2</jupiter.version>
        <sigtest.plugin.version>1.7</sigtest.plugin.version>
        <signature.sigTestClasspath/>

        <weld.version>5.1.2.Final</weld.version>
        <resteasy.version>6.2.7.Final</resteasy.version>
        <version.org.wildfly.arquillian>5.0.1.Final</version.org.wildfly.arquillian>
        <wildfly.plugin.version>4.2.2.Final</wildfly.plugin.version>

        <version.org.wildfly>31.0.0.Final</version.org.wildfly>

        <!--gc.args>-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5006</gc.args-->
        <failsafe.plugin.jdk17.args/>
        <jimage.dir>${project.build.directory}/jdk-bundle</jimage.dir>
        <standalone.xml.file>standalone.xml</standalone.xml.file>

        <!-- Provisioning properties -->
        <feature.pack.groupId>org.wildfly</feature.pack.groupId>
        <feature.pack.artifactId>wildfly-ee-galleon-pack</feature.pack.artifactId>
        <feature.pack.version>${version.org.wildfly}</feature.pack.version>

        <galleon.fork.embedded>true</galleon.fork.embedded>
        <galleon.log.time>true</galleon.log.time>
        <galleon.offline>false</galleon.offline>
        <galleon.skip>false</galleon.skip>
    </properties>

    <modules>
        <!-- This must be listed first -->
        <module>tck-setup</module>
        <!-- TCK Modules -->
        <module>cdi-langmodel-tck</module>
        <module>cdi-tck</module>
        <module>core-tck</module>
        <module>inject-tck</module>
        <module>jsonp-plugability-tck</module>
        <module>jsonp-standalone-tck</module>
        <module>jsonb-standalone-tck</module>
        <module>rest-tck</module>
    </modules>

    <!-- Dependency management -->
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.junit</groupId>
                <artifactId>junit-bom</artifactId>
                <version>${jupiter.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>cdi-tck-api</artifactId>
                <version>${cdi.tck.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>cdi-tck-ext-lib</artifactId>
                <version>${cdi.tck.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.lang-model</artifactId>
                <version>${cdi.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>${cdi.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>${inject.api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-tck</artifactId>
                <version>${jsonp.tck.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-bom</artifactId>
                <version>${resteasy.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.jboss.arquillian</groupId>
                <artifactId>arquillian-bom</artifactId>
                <version>${version.org.jboss.arquillian}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.wildfly.arquillian</groupId>
                <artifactId>wildfly-arquillian-container-managed</artifactId>
                <version>${version.org.wildfly.arquillian}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${jupiter.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${jupiter.version}</version>
            </dependency>

            <dependency>
                <groupId>org.netbeans.tools</groupId>
                <artifactId>sigtest-maven-plugin</artifactId>
                <version>${sigtest.plugin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- Configure the build -->
    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.netbeans.tools</groupId>
                    <artifactId>sigtest-maven-plugin</artifactId>
                    <version>${sigtest.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <jboss.home>${jboss.home}</jboss.home>
                            <standalone.xml.file>${standalone.xml.file}</standalone.xml.file>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <configuration>
                        <systemPropertyVariables>
                            <jboss.home>${jboss.home}</jboss.home>
                            <standalone.xml.file>${standalone.xml.file}</standalone.xml.file>
                        </systemPropertyVariables>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <repositories>
        <!-- Required for provisioning WildFly. Not all dependencies currently exist on Maven Central. This is also
             useful for when we want to test with versions releases that have not yet been synchronized to Maven Central
             from JBoss Nexus.
         -->
        <repository>
            <releases>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <enabled>true</enabled>
                <updatePolicy>never</updatePolicy>
            </snapshots>
            <id>jboss-public-repository-group</id>
            <name>JBoss Public Repository Group</name>
            <url>https://repository.jboss.org/nexus/content/groups/public/</url>
            <layout>default</layout>
        </repository>
    </repositories>


    <profiles>
        <profile>
            <id>set-jboss-home</id>
            <activation>
                <property>
                    <name>env.JBOSS_HOME</name>
                </property>
            </activation>
            <properties>
                <jboss.home>${env.JBOSS_HOME}</jboss.home>
            </properties>
        </profile>
        <profile>
            <id>provision-container</id>
            <activation>
                <property>
                    <name>!env.JBOSS_HOME</name>
                </property>
            </activation>
            <properties>
                <jboss.home>${project.build.directory}${file.separator}wildfly</jboss.home>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.wildfly.plugins</groupId>
                        <artifactId>wildfly-maven-plugin</artifactId>
                        <version>${wildfly.plugin.version}</version>
                        <configuration>
                            <skip>${galleon.skip}</skip>
                            <provisioning-dir>${jboss.home}</provisioning-dir>
                            <offline>${galleon.offline}</offline>
                            <galleon-options>
                                <jboss-fork-embedded>${galleon.fork.embedded}</jboss-fork-embedded>
                            </galleon-options>
                            <feature-packs>
                                <feature-pack>
                                    <groupId>${feature.pack.groupId}</groupId>
                                    <artifactId>${feature.pack.artifactId}</artifactId>
                                    <version>${feature.pack.version}</version>
                                    <inherit-configs>false</inherit-configs>
                                    <inherit-packages>false</inherit-packages>
                                </feature-pack>
                            </feature-packs>
                            <layers>
                                <layer>ee-core-profile-server</layer>
                            </layers>
                        </configuration>
                        <executions>
                            <execution>
                                <id>server-provisioning</id>
                                <phase>generate-test-resources</phase>
                                <goals>
                                    <goal>provision</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            This profile enables consuming artifacts from the ossrh staging
            repository group.
        -->
        <profile>
            <id>staging</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <sonatypeOssDistMgmtNexusUrl>https://jakarta.oss.sonatype.org</sonatypeOssDistMgmtNexusUrl>
                <sonatypeOssDistMgmtStagingUrl>${sonatypeOssDistMgmtNexusUrl}/content/repositories/staging/</sonatypeOssDistMgmtStagingUrl>
            </properties>
            <repositories>
                <repository>
                    <id>sonatype-nexus-staging</id>
                    <name>Sonatype Nexus Staging</name>
                    <url>${sonatypeOssDistMgmtStagingUrl}</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </repository>
            </repositories>
            <pluginRepositories>
                <pluginRepository>
                    <id>sonatype-nexus-staging</id>
                    <name>Sonatype Nexus Staging</name>
                    <url>${sonatypeOssDistMgmtStagingUrl}</url>
                    <releases>
                        <enabled>true</enabled>
                    </releases>
                    <snapshots>
                        <enabled>false</enabled>
                    </snapshots>
                </pluginRepository>
            </pluginRepositories>
        </profile>
    </profiles>

</project>
