<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright \(c\) "2022" Red Hat and others
  ~
  ~ This program and the accompanying materials are made available under the Apache Software License 2.0 which is available at:
  ~  https://www.apache.org/licenses/LICENSE-2.0.
  ~
  ~  SPDX-License-Identifier: Apache-2.0
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Just for staging proflie access (-Pstaging) for unreleased Jakarta APIs -->
    <parent>
        <groupId>org.wildfly.tck</groupId>
        <artifactId>core-tck-runner-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <artifactId>rest-tck-runner</artifactId>
    <name>WildFly Jakarta RESTful TCK Runner</name>

    <properties>
        <test>ee.jakarta.tck.coreprofile.rs.CoreProfileRestTCKSuite</test>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.ee.tck.coreprofile</groupId>
            <artifactId>rest-tck-suite</artifactId>
            <version>${core.profile.tck.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>jakarta.ws.rs</groupId>
            <artifactId>jakarta-restful-ws-tck</artifactId>
            <version>${rest.tck.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.jupiter</groupId>
                    <artifactId>junit-jupiter</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.wildfly.arquillian</groupId>
            <artifactId>wildfly-arquillian-container-managed</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit5</groupId>
            <artifactId>arquillian-junit5-container</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.protocol</groupId>
            <artifactId>arquillian-protocol-servlet-jakarta</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Required by the Jakarta REST TCK -->
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>${apache.httpclient.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>2.2</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.netbeans.tools</groupId>
            <artifactId>sigtest-maven-plugin</artifactId>
            <version>${sigtest.plugin.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- SeBootstrap TCK dependencies -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-undertow-cdi</artifactId>
            <scope>test</scope>
            <exclusions>
                <!-- WildFly Arquillian uses an older version which is required. -->
                <exclusion>
                    <groupId>org.jboss.threads</groupId>
                    <artifactId>jboss-threads</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.jboss.resteasy</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!-- This is only used for the SeBootstrap test and doesn't need to come from the container -->
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>jandex</artifactId>
            <version>3.2.0</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
            </testResource>
        </testResources>
        <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-test-classes</phase>
                        <configuration>
                            <!-- Export the properties defined below so they can be used for the signature tests -->
                            <exportAntProperties>true</exportAntProperties>
                            <target>
                                <fileset id="rest-jar" dir="${jboss.home}${file.separator}modules/system/layers/base/jakarta/ws/rs/api/main/">
                                    <include name="**/jakarta.ws.rs-api*.jar"/>
                                </fileset>
                                <pathconvert pathsep="${path.separator}"
                                             property="jakarta.rest.jar" refid="rest-jar"/>
                                <fileset id="xml-bind-jar" dir="${jboss.home}${file.separator}modules/system/layers/base/jakarta/xml/bind/api/main/">
                                    <include name="**/*.jar"/>
                                </fileset>
                                <pathconvert pathsep="${path.separator}"
                                             property="jakarta.xml.bind.jar" refid="xml-bind-jar"/>
                                <fileset id="jakarta-api-jars"
                                         dir="${jboss.home}${file.separator}modules/system/layers/base/jakarta/">
                                    <include name="**/activation/api/main/*.jar"/>
                                    <include name="**/annotation/api/main/*.jar"/>
                                    <include name="**/el/api/main/*.jar"/>
                                    <include name="**/enterprise/api/main/*.jar"/>
                                    <include name="**/json/api/main/*.jar"/>
                                    <include name="**/json/bind/api/main/*.jar"/>
                                    <include name="**/inject/api/main/*.jar"/>
                                    <include name="**/interceptor/api/main/*.jar"/>
                                    <include name="**/ws/rs/api/main/*.jar"/>
                                    <include name="**/xml/bind/api/main/*.jar"/>
                                </fileset>
                                <pathconvert pathsep=","
                                             property="jakarta.api.jars" refid="jakarta-api-jars"/>
                                <fileset id="impl-jars"
                                         dir="${jboss.home}${file.separator}modules/system/layers/base/org/">
                                    <!-- JSON -->
                                    <include name="**/eclipse/parsson/main/*.jar"/>
                                    <include name="**/eclipse/yasson/main/*.jar"/>
                                    <!-- Weld -->
                                    <include name="**/jboss/weld/**/weld*.jar"/>
                                    <include name="**/jboss/classfilewriter/main/*.jar"/>
                                    <include name="**/jboss/logging/main/*.jar"/>
                                    <!-- REST Client -->
                                    <include name="**/jboss/resteasy/resteasy-cdi/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-client/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-client-api/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-core/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-core-spi/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-jaxb-provider/main/*.jar"/>
                                    <include name="**/jboss/resteasy/resteasy-json-binding-provider/main/*.jar"/>
                                    <include name="**/apache/httpcomponents/core/main/*.jar"/>
                                    <include name="**/glassfish/jaxb/main/*.jar"/>
                                    <include name="**/reactivestreams/main/*.jar"/>
                                </fileset>
                                <pathconvert pathsep=","
                                             property="impl.jars" refid="impl-jars"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>enable-yaml-configuration</id>
                        <phase>process-test-classes</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${jboss.home}/modules/system/layers/base/org/jboss/as/controller/main/dir/META-INF/services/"/>
                                <copy verbose="true" todir="${jboss.home}/modules/system/layers/base/org/jboss/as/controller/main/dir/META-INF/services/">
                                    <fileset dir="${project.build.testOutputDirectory}" includes="org.jboss.as.controller.persistence.ConfigurationExtension" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <test>${test}</test>

                    <argLine>
                        ${addjdkexports}
                        ${addjdkopens}
                    </argLine>
                    <systemPropertyVariables>
                        <arquillian.launch>wildfly-core-profile</arquillian.launch>
                        <servlet_adaptor>org.jboss.resteasy.plugins.server.servlet.HttpServletDispatcher</servlet_adaptor>
                        <webServerHost>localhost</webServerHost>
                        <webServerPort>8080</webServerPort>
                        <cts.harness.debug>false</cts.harness.debug>
                        <junit.log.traceflag>false</junit.log.traceflag>
                        <jimage.dir>${jimage.dir}</jimage.dir>
                        <!-- These are required properties, but are not used since security tests are disabled -->
                        <user>unused</user>
                        <password>unused</password>
                        <authuser>unused</authuser>
                        <authpassword>unused</authpassword>
                        <porting.ts.url.class.1>ee.jakarta.tck.ws.rs.lib.implementation.sun.common.SunRIURL</porting.ts.url.class.1>
                        <optional.tech.packages.to.ignore>jakarta.xml.bind</optional.tech.packages.to.ignore>
                        <!--suppress UnresolvedMavenProperty -->
                        <signature.sigTestClasspath>${jakarta.rest.jar}${path.separator}${jakarta.xml.bind.jar}${path.separator}${jimage.dir}/java.base${path.separator}${jimage.dir}/java.rmi${path.separator}${jimage.dir}/java.sql${path.separator}${jimage.dir}/java.naming</signature.sigTestClasspath>

                    </systemPropertyVariables>
                    <systemProperties>
                        <!-- This property propagates to the javaVmArguments in arquillian.xml -->
                        <additional.vm.args>
                            ${failsafe.plugin.jdk17.args} -Ddev.resteasy.sse.closed.response.code=200
                        </additional.vm.args>
                    </systemProperties>
                    <dependenciesToScan>jakarta.ee.tck.coreprofile:rest-tck-suite,jakarta.ws.rs:jakarta-restful-ws-tck</dependenciesToScan>
                    <statelessTestsetReporter
                            implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5Xml30StatelessReporter">
                        <disable>false</disable>
                        <version>3.0</version>
                        <usePhrasedFileName>false</usePhrasedFileName>
                        <usePhrasedTestSuiteClassName>true</usePhrasedTestSuiteClassName>
                        <usePhrasedTestCaseClassName>true</usePhrasedTestCaseClassName>
                        <usePhrasedTestCaseMethodName>true</usePhrasedTestCaseMethodName>
                    </statelessTestsetReporter>
                </configuration>
                <executions>
                    <execution>
                        <id>default-test</id>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cdi-tck</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>${impl.jars}</additionalClasspathElement>
                                <additionalClasspathElement>${jakarta.api.jars}</additionalClasspathElement>
                            </additionalClasspathElements>
                            <classpathDependencyExcludes>
                                <exclude>jakarta.el</exclude>
                                <exclude>jakarta.enterprise</exclude>
                                <exclude>jakarta.inject</exclude>
                                <exclude>jakarta.ws.rs:jakarta.ws.rs-api</exclude>
                                <exclude>org.jboss.classfilewriter</exclude>
                                <exclude>org.jboss.weld</exclude>
                            </classpathDependencyExcludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>

